(*
Conversation Box
================

The converstaion box file holds any functions that manipulate and/or gather
information from a conversation between the player and NPC's or the player and
"the game" (i.e. destroying an item).

The source for this file can be found
`here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/conversationbox.simba>`_.

*)

{$f-}
{$include_once interfaces.simba}
{$include_once ../utilities/color.simba}
{$include_once ../core/text.simba}

{*
const Internal
~~~~~~~~~~~~~~

Internal constants used throughout the file.
*}
const
  _COLOR_SPEAKER     = 376558;   // gold color of the name of the speaker
  _COLOR_SPOKEN_TEXT = 0;        // black
  _COLOR_OPTION_TEXT = 13158600; // white color of conversation options

(*
type TRSConversationBox
~~~~~~~~~~~~~~~~~~~~~~~

The interface type for the conversation box.  Stores attributes and functions
of the conversation box interface.
*)
type
  TRSConversationBox = record(TRSInterface)
    __placeholder: byte;
  end;

(*
var conversationBox
~~~~~~~~~~~~~~~~~~~

The variable used to call conversation box functions, procedures and attributes.

Example:

.. code-block:: pascal

    if (conversationBox.areTalking()) then
      writeln('Player is talking to something or someone');
*)
var
  conversationBox: TRSConversationBox;

{*
TRSConversationBox.__init
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSConversationBox.__init();

Initializes the TRSConversationBox variable.

.. note::

    - by Coh3n
    - Last Updated: 17 August 2013 by Coh3n

Example:

.. code-block:: pascal

    conversationBox.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSConversationBox.__init();
begin
  with self do
  begin
    name := 'RS Conversation Box';
    ID := ID_INTERFACE_CONVERSATION_BOX;
    parentID := -1;
    static := true;
  end;
end;
{$ENDIF}

{*
TRSConversationBox.__find
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.__find(): boolean;

Returns true of the conversation box interface is found and its bounds are set.
Called in TRSConversationBox.getSpeaker().

.. note::

    - by Coh3n
    - Last Updated: 17 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not self.__find()) then
      exit();
*}
{$IFNDEF CODEINSIGHT}
function TRSConversationBox.__find(): boolean;
var
  wid, hei: integer;
begin
  getClientDimensions(wid, hei);
  result := true;

  self.setBounds([0, hei - 146, 521, hei - 1]); // bottom left corner of the client
end;
{$ENDIF}

(*
TRSConversationBox.getSpeaker
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.getSpeaker(): string;

Returns a string of the curren speaker (i.e. the title of the conversation box).

.. note::

    - by DemiseSythe
    - Last Updated: 17 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (conversationBox.getSpeaker = 'Speaker''s Name') then
      writeln('Talking to Speaker''s Name');
*)
function TRSConversationBox.getSpeaker(): string;
begin
  if (not self.__find()) then
    exit();

  // gold color of the text
  result := getTextAtEx(self.x + 120, self.y + 8, self.x+self.w - 8, self.y + 34, 0, 50, 30, _COLOR_SPEAKER, 15, CharsNPC);
end;

(*
TRSConversationBox.areTalking
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.areTalking(): boolean;

Returns true if someone or something is talking.

.. note::

    - by Wizzup?
    - Last Updated: 17 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (conversationBox.areTalking()) then
      writeln('We are talking');
*)
function TRSConversationBox.areTalking(): boolean;
begin
  result := (self.getSpeaker() <> '');
end;

(*
TRSConversationBox.isOpen
~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.isOpen(): boolean;

Returns true if the conversation box is open.

.. note::

    - by Olly
    - Last Updated: 21 September 2013 by Olly

Example:

.. code-block:: pascal

    if (not conversationBox.isOpen()) then
      exit();
*)
function TRSConversationBox.isOpen(): boolean;
var
  tpaBorder, tpaPaper: TPointArray;
  i, j, hi: integer;
  b: TBox;
begin
  b := self.getBounds();

  if (findColors(tpaBorder, 5919042, b)) then
    if (findColorsTolerance(tpaPaper, 9942987, tpaBorder.getBounds(), 6)) then
    begin
      hi := high(tpaBorder);
      j := 0;

      // if tpa[i].y -1 is in the paper tpa, and then if tpa[i].y -138 is in the border tpa, it's for sure bart of the chatbox.
      for i := 0 to hi do
        if (pointInTPA([tpaBorder[i].x, tpaBorder[i].y -1], tpaPaper)) then
          if (pointInTPA([tpaBorder[i].x, tpaBorder[i].y -138], tpaBorder)) then
          begin
            inc(j);

            result := (j > 10);

            if (result) then
              break();
          end;
    end;
end;

(*
TRSConversationBox.getChatArea
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.getChatArea(): TBox;

Returns a TBox of the area where chat is located in the conversation box.

.. note::

    - by Olly
    - Last Updated: 11 September 2013 by Olly

Example:

.. code-block:: pascal

    b := conversationBox.getChatArea();
*)
function TRSConversationBox.getChatArea(): TBox;
var
  b: TBox;
  left: boolean;
  tpaBrown, tpaGrey: TPointArray;
begin
  if (not conversationBox.isOpen()) then
    exit();

  findColorsTolerance(tpaBrown, 7116210, conversationBox.getBounds(), 20, colorSetting(2, 0.05, 0.28));
  result := tpaBrown.getBounds();

  findColorsTolerance(tpaGrey, 9934999, result, 12, colorSetting(2, 3.48, 0.06));

  // no head in the area? nothing to filter it out then.
  if (length(tpaGrey) < 200) then
    exit();

  b := tpaGrey.getBounds();
  b.expand(15);

  left := (b.x1 < result.getMiddle().x);

  if (left) then
    result := [b.x2, result.y1, result.x2, result.y2]
  else
    result := [result.x1, result.y1, b.x1, result.y2];
end;

(*
TRSConversationBox.getChat
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.getChat(): string;

Returns player or NPC chat.

.. note::

    - by Olly
    - Last Updated: 11 September 2013 by Olly

Example:

.. code-block:: pascal

    s := conversationBox.getChat();
*)
function TRSConversationBox.getChat(): string;
var
  tpa: TPointArray;
  atpa, atpaLines: T2DPointArray;
  modifers: array [0..1] of array [0..1] of extended;
  cols: array [0..1] of array [0..1] of integer;
  i: integer;
  b: TBox;
begin
  result := '';

  if (not conversationBox.isOpen()) then
  begin
    print('conversationBox.getChat(): Unable to read any text because we aren''t in a conversation', TDebug.ERROR);
    exit();
  end;

  b := getChatArea();
  b.edit(+5, +15, -5, -5);

  modifers := [[0.31, 0.58], [0.11, 0.46]];
  cols := [[3225152, 23], [7243671 , 6]];

  setLength(atpa, 2);

  for i := 0 to high(cols) do
    findColorsTolerance(atpa[i], cols[i][0], b, cols[i][1], colorSetting(2, modifers[i][0], modifers[i][1]));

  tpa := atpa.merge();

  atpaLines := tpa.split(b.getWidth(), 3);
  sortATPAFromFirstPointY(atpaLines, [b.x1 + (b.getWidth() div 2), b.y1]);

  for i := 0 to high(atpaLines) do
  begin
    setLength(atpa, 0);
    atpa := atpaLines[i].split(1, 10);

    if (length(atpa) > 10) then
    begin
      sortATPAFromFirstPointX(atpa, [b.x1, b.y1]);
      result := result + getTextATPA(atpa, 3, 'NPCCharsSmooth') + ' ';
    end;
  end;

  print('conversationBox.getChat(): Text found: ' + result, TDebug.SUB);
end;

(*
TRSConversationBox.findChat
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.findChat(txt: TStringArray): boolean;

Returns true if 'txt' is found in the chat dialog.

.. note::

    - by Olly
    - Last Updated: 11 September 2013 by Olly

Example:

.. code-block:: pascal

     if (conversationBox.findChat(['Well-Done'])) then
       writeln('We have finished!');
*)
function TRSConversationBox.findChat(txt: TStringArray): boolean;
begin
  if (not self.isOpen()) then
    exit();

  result := isArrInStr(txt, self.getChat());
end;

(*
TRSConversationBox.selectOption
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.selectOption(number: integer): boolean;

Will select the option number if its available, will return if succesful or not.

.. note::

    - by Olly
    - Last Updated: 11 September 2013 by Olly

Example:

.. code-block:: pascal

     if (conversationBox.selectOption(2)) then
       writeln('Selected option two');
*)
function TRSConversationBox.selectOption(number: integer): boolean;
var
  tpa: TPointArray;
  atpa: T2DPointArray;
  b: TBox;
begin
  b := self.getChatArea();

  if (not findColorsTolerance(tpa, 1972239, b, 2, colorSetting(2, 0.40, 2.84))) then
    exit();

  atpa := tpa.split(100, 4);
  atpa.filterBetween(0, 50);

  sortATPAFromFirstPointY(atpa, [b.x1, b.y1]);

  result := (number <= length(atpa));

  if (result) then
  begin
    print('conversationBox.selectOption(): Selected option ' + intToStr(number), TDebug.SUB);
    mouseBox(atpa[number -1].getBounds(), MOUSE_LEFT);
    wait(100 + random(250));
  end;
end;

(*
TRSConversationBox.continue
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSConversationBox.continue(spaceBar, doWait: boolean): boolean;

Interacts with the "click to continue" button at the bottom of the conversation
dialog.  If 'spaceBar' is set to true, it will continue via the space bar, otherwise
it will click the button.  If 'doWait' is set to true it will wait until new text
appears, otherwise return true as soon as it continues.

.. note::

    - by Coh3n
    - Last Updated: 17 August 2013 by Coh3n

Example:

.. code-block:: pascal

    repeat
      conversationBox.continue(true, true);
    until(not conversationBox.isOpen());
*)
function TRSConversationBox.continue(spaceBar, doWait: boolean): boolean;
var
  tpaButton: TPointArray;
  atpaButton: T2DPointArray;
  i, t, c, px, py: integer;
  b: TBox;
begin
  if (not self.isOpen()) then
    exit();

  // yellow of the top of the button
  findColorsTolerance(tpaButton, 7003134, self.getBounds(), 15, colorSetting(1));

  if (length(tpaButton) <= 0) then
  begin
    print('TRSConversationBox.clickContinue(): Failed to find button color', TDebug.ERROR);
    exit();
  end;

  atpaButton := splitTPAEx(tpaButton, 2, 2);

  for i := 0 to high(atpaButton) do
  begin
    b := atpaButton[i].getBounds();

    if (inRange(b.x2 - b.x1, 58, 75)) then
      // failsafe to make sure we have the right button
      if (findColorTolerance(px, py, 11510665, b, 15)) then // light color of the arrow on the button (>)
      begin
        c := countColor(_COLOR_SPOKEN_TEXT, self.getBounds());

        if (spaceBar) then
          typeByte(VK_SPACE)
        else
          mouseBox([b.x1, b.y1, b.x2, b.y2 + 10], MOUSE_LEFT);

        result := true;

        t := (getSystemTime() + 10000);

        if (doWait) then
          while (c = countColor(_COLOR_SPOKEN_TEXT, self.getBounds())) and (getSystemTime() < t) do
            wait(50 + random(50));

        exit();
      end else
        print('TRSConversationBox.clickContinue(): Failed to find button arrow color', TDebug.ERROR);
  end;
end;

{$IFNDEF CODEINSIGHT}
function __findConversationBox(): boolean;
begin
  result := ConversationBox.__find();
end;
{$ENDIF}

{$f+}

begin
  conversationBox.__init();
  __interfaceFindFunctions[conversationBox.ID] := @__findConversationBox;
end;

