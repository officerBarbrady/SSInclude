(*
BankScreen
==========

The bankscreen file holds functions and procedures that are used in the
Runescape bank screen.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/bankscreen.simba>`_.

*)

{$include_once interfaces.simba}
{$include_once ../core/text.simba}

{$f-}

{*
const Internal
~~~~~~~~~~~~~~

Internal bankscreen constants.

*}
const
  _COLOR_BANK_TAB_ACTIVE = 4407350; // light color of an active bank tab

(*
const Deposit Buttons
~~~~~~~~~~~~~~~~~~~~~

Integer constants that represent the order of the quick deposit buttons.

*)
const
  QUICK_DEPOSIT_INVENTORY   = 0;
  QUICK_DEPOSIT_EQIUPMENT   = 1;
  QUICK_DEPOSIT_BOB         = 2;
  QUICK_DEPOSIT_MONEY_POUCH = 3;

(*
type TRSBankScreen
~~~~~~~~~~~~~~~~~~

A type that stores all the attributes and functions of the Runescape bankscreen.

*)
type
  TRSBankScreen = record(TRSInterface)
    __bankItemSlots,
    __packItemSlots,
    __tabSlots: TBoxArray;
  end;

(*
var bankScreen
~~~~~~~~~~~~~~

The variable that holds all bankscreen information. It used when calling any functions
in this file.

Example:

.. code-block:: pascal

    if (bankScreen.isOpen()) then
      writeln('Bank is open!');

*)
var
  bankScreen: TRSBankScreen;

{*
TRSBankScreen.__init
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSBankScreen.__init();

Initializes the TRSBankScreen.

.. note::

    - by Olly
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    minimap.__init();

*}
{$IFNDEF CODEINSIGHT}
procedure TRSBankScreen.__init();
begin
  with (self) do
  begin
    name := 'RS Bank Screen';
    ID := ID_INTERFACE_BANKSCREEN;
    parentID := -1;
    static := true;
  end;
end;
{$ENDIF}

{*
TRSBankScreen.__find
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.__find(): boolean;

Finds the TRSBankScreen based on the size of the client.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    minimap.__find();

*}
{$IFNDEF CODEINSIGHT}
function TRSBankScreen.__find(): boolean;
var
  wid, hei: integer;
begin
  getClientDimensions(wid, hei);
  result := true;

  with self do
  begin
    // bounds of the entire bank (including the side backpack)
    setBounds([round(wid / 2) - 339, round(hei / 2) - 297, round(wid / 2) + 342, round(hei / 2) + 291]);

    __bankItemSlots := grid(10, 10, 37, 33, 44, 44, point(self.x + 40, self.y + 100));
    __packItemSlots := grid(4, 7, 36, 33, 42, 36, point(self.x + 518, self.y + 108));
    __tabSlots      := grid(9, 1, 45, 35, 48, 0, point(self.x + 34, self.y + 57));
  end;
end;
{$ENDIF}

(*
TRSBankScreen.isOpen
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.close(): boolean;

Returns if the bankscreen is open or not.

.. note::

    - by Olly
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (bankScreen.isOpen()) then
      writeln('bankscreen is open! lets start depositing items');

*)
function TRSBankScreen.isOpen(timeOut: integer = 0): boolean;
var
  p: TPoint;
  t: integer;
begin
  self.__find();

  t := getSystemTime() + timeOut;
  result := false;

  repeat
    if (getColor(self.x + 113, self.y+self.h - 19) = 13618403) then // pinkish color of the "Bank PIN" text
      result := findText(p, 13618403, 0, ['ank'], [upChars], intToBox(self.x + 100, self.y+self.h - 30, self.x + 175, self.y+self.h - 9)); // box around "Bank PIN" text

    if (result) then
      break();

    if (timeOut <> 0) then
      wait(20 + random(40));

  until (getSystemTime() >= t);

  if (not result) then
    print('bankScreen.isOpen(): result = ' + toStr(result) + ', took: ' + intToStr(getSystemTime() + timeOut - t) + 'ms', TDebug.SUB);
end;

(*
TRSBankScreen.close
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.close(): boolean;

Closes the bankscreen, will return if succesful or not.  Closes via the Escape
key.

.. note::

    - by Ollybest
    - Last Updated: 15 June 2013 by Ollybest

Example:

.. code-block:: pascal

    if (bankScreen.close()) then
      writeln('closed the bankscreen');

*)
function TRSBankScreen.close(): boolean;
var
  t, timeOut: integer;
begin
  timeOut := getSystemTime() + 5000;
  t := getSystemTime();

  result := (not self.isOpen());

  if (not result) then
  begin
    typeByte(VK_ESCAPE);
    wait(10 + random(20));

    while (not result) and (timeOut > getSystemTime()) do
    begin
      result := (not self.isOpen());
      wait(300 + random(300));
    end;
  end;

  print('bankScreen.close(): result = ' + boolToStr(result), TDebug.SUB);
end;

{*
TRSBankScreen._isSlotVaild
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen._isSlotVaild(arr: TBoxArray; slot: integer): boolean;

Returns true if the 'slot' value is valid in the box array 'arr'.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (bankscreen.isSlotValid(bankscreen.__bankItemSlots, 25) then
      writeln('Slot 25 is a vaild bank slot!');

*}
function TRSBankScreen._isSlotVaild(arr: TBoxArray; slot: integer): boolean;
begin
  result := (inRange(slot, low(arr) + 1, high(arr) + 1));
end;

(*
TRSBankScreen.getBankItemBounds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    TRSBankScreen.getBankItemBounds(slot: integer): TBox;

Returns the TBox of the desired bank item slot. Bank slots start at the top left
at 1 and count across the columns. Default slots do NOT line up properly when
the entire contents of the bank is opened, and "Tab 2", "Tab 3", etc. text can
be seen.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    var
      b: TBox;
    begin
      b := bankscreen.getBankItemBounds(1);

*)
function TRSBankScreen.getBankItemBounds(slot: integer): TBox;
begin
  if (not self._isSlotVaild(self.__bankItemSlots, slot)) then
  begin
    print('TRSBankScreen.getBankItemBounds(): Slot '+toStr(slot)+' is invalid', TDebug.WARNING);
    exit(intToBox(-1, -1, -1, -1));
  end;

  // - 1 because the grid (array) starts at 0.
  result := self.__bankItemSlots[slot - 1];
end;

(*
TRSBankScreen.getPackItemBounds
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.getPackItemBounds(slot: integer): TBox;

Returns the TBox of the desired pack item slot in the bank interface.  Pack slots
start at the top left at 1 and count across the columns.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    var
      b: TBox;
    begin
      b := bankscreen.getPackItemBounds(1);

*)
function TRSBankScreen.getPackItemBounds(slot: integer): TBox;
begin
  if (not self._isSlotVaild(self.__packItemSlots, slot)) then
  begin
    print('TRSBankScreen.getPackItemBounds(): Slot '+toStr(slot)+' is invalid', TDebug.WARNING);
    exit(intToBox(-1, -1, -1, -1));
  end;

  // - 1 because the grid (array) starts at 0.
  result := self.__packItemSlots[slot - 1];
end;

{*
TRSBankScreen._getTabBounds
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen._getTabBounds(tab: integer): TBox;

Returns the TBox of the desired tab slot in the bank interface.  Tab slots
start on the left at 1 and count across.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    var
      b: TBox;
    begin
      b := bankscreen._getTabBounds(1);

*}
function TRSBankScreen._getTabBounds(tab: integer): TBox;
begin
  if (not self._isSlotVaild(self.__tabSlots, tab)) then
  begin
    print('TRSBankScreen._getTabBounds(): Tab '+toStr(tab)+' is invalid', TDebug.WARNING);
    exit(intToBox(-1, -1, -1, -1));
  end;

  // - 1 because the grid (array) starts at 0.
  result := self.__tabSlots[tab - 1];
end;

{*
RSBankScreen._doesTabExist
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen._doesTabExist(tab: integer): boolean;

Returns true if the 'tab' exists.  If 'tab' is the "Add Tab" tab, it will return
false.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not bankscreen._doesTabExist(3)) then
      exit();
*}
function TRSBankScreen._doesTabExist(tab: integer): boolean;
var
  tabBox: TBox;
  px, py: integer;
begin
  result := false;

  if (not self.isOpen()) then
    exit();

  tabBox := self._getTabBounds(tab);

  if (tabBox.x1 <> -1) then
    if (countColor(6672631, tabBox) <> 5) then // gold color of the very top of the "+"
      result := findColorTolerance(px, py, _COLOR_BANK_TAB_ACTIVE, tabBox, 5);
end;

(*
RSBankScreen.isTabActive
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.isTabActive(tab: integer): boolean;

Returns true if the 'tab' is active.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not bankscreen.isTabActive(3)) then
      bankscreen.openTab(3);
*)
function TRSBankScreen.isTabActive(tab: integer): boolean;
var
  tabBox: TBox;
begin
  result := false;

  if (not self.isOpen()) then
    exit();

  tabBox := self._getTabBounds(tab);

  if (tabBox.x1 <> -1) then
    // light background color of an active tab - actual count is around 71 for an active tab
    result := (countColorTolerance(_COLOR_BANK_TAB_ACTIVE, tabBox, 5) > 50);
end;

(*
TRSBankScreen.openTab
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSBankScreen.openTab(tab: integer): boolean;

Opens the bank tab 'tab'.  Returns true if successful.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    bankscreen.openTab(4);
*)
function TRSBankScreen.openTab(tab: integer): boolean;
var
  boxTab: TBox;
  t: integer;
begin
  if (not self._doesTabExist(tab)) then
  begin
    print('TRSBankScreen.openTab(): Tab '+toStr(tab)+' doesn''t exist', TDebug.WARNING);
    exit(false);
  end;

  print('TRSBankScreen.openTab()', TDebug.HEADER);

  result := self.isTabActive(tab);

  if (not result) then
  begin
    boxTab := self._getTabBounds(tab);

    if (boxTab.x1 <> -1) then
    begin
      mouseBox(boxTab, MOUSE_LEFT);
      print('Tab is valid, clicking...');

      t := (getSystemTime() + 3000);

      while (not result) and (getSystemTime() < t) do
      begin
        print('Waiting for tab to activate...');
        result := self.isTabActive(tab);
        wait(300 + random(200));
      end;
    end;

  end else
    print('Tab '+toStr(tab)+' is already active');

  print('TRSBankScreen.openTab(): '+toStr(result), TDebug.FOOTER);
end;

(*
TRSBankScreen.scrollUp
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSBankScreen.scrollUp();

Will scroll the bankscreen up to the top if reqiured.

.. note::

    - by Olly
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    bankScreen.scrollUp();

*)
procedure TRSBankScreen.scrollUp();
const
  COLOR_RESULT = 3321831; // color when scroll bar is all the way up
var
  col, t: integer;
  tpa: TPointArray;
  scrollP, p: TPoint;
  itemArea, b: TBox;
begin
  if (not self.isOpen()) then
    exit();

  p := [self.x + 473, self.y + 94]; // top of the scroll bar (when it's at the top)
  col := getColor(p);

  // color at top of scroller = already at top | no scroll bar color
  if (col = COLOR_RESULT) or (col = 1709067) then
    exit();

  print('bankScreen.scrollUp(): Going to scroll the bankscreen up to the top');

  b := self.getBounds();

  itemArea := [b.x1 + 13, b.y1 + 97, b.x2 - 221, b.y2 - 61];
  scrollP := itemArea.getRandomPoint();

  t := (getSystemTime() + 15000);

  // scroll the mouse using the mouse wheel
  repeat
    if (getColor(p) = COLOR_RESULT) then
      break;

    mouseScroll(scrollP, 7 + random(5), false);
    wait(10 + random(20));

  until(getSystemTime() > t);
end;

begin
  bankscreen.__init();
end;

