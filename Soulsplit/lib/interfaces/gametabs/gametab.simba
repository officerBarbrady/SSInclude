(*
Gametab
=======

The gametab file holds any global gametab data.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/gametabs/gametab.simba>`_.

*)

{$include_once ../interfaces.simba}
{$include_once ../../core/text.simba}

{$f-}

(*
Constant: Tabs
~~~~~~~~~~~~~~

Integer constants that represent each gametab. DO NOT change values unless you
know exactly what you're doing.  Each value represents a box in a grid.  The
grid starts at the top left at 0, and counts across the rows and ends in the
bottom right of the grid.

Example:

.. code-block:: pascal

    gameTabs.openTab(TAB_FRIENDS);
*)
const
  TAB_HERO = 40;
    TAB_TASK  = 32;
    TAB_STATS = 24;

  TAB_GEAR = 41;
    TAB_EQUIPMENT = 33;
    TAB_BACKPACK  = 25;

  TAB_ADVENTURES = 42;
    TAB_COMPASS_TASK = 34;

  TAB_POWERS = 43;
    TAB_DEFENSIVE = 35;
    TAB_RANGED    = 27;
    TAB_MELEE     = 19;
    TAB_MAGIC     = 11;
    TAB_PRAYER    = 3;

  TAB_SOCIAL = 44;
    TAB_CLAN_CHAT    = 36;
    TAB_FRIENDS_CHAT = 28;
    TAB_FRIENDS      = 20;

  TAB_EXTRAS = 45;

  TAB_HELP = 46;

  TAB_OTHER = 47;
    TAB_MUSIC = 39;
    TAB_NOTES = 31;

{*
const Color
~~~~~~~~~~~

Internal color constants used in the gametabs functions.
*}
const
  __COLORS_ACTIVE_TAB = [7037013, 8682089];

{*
type TRSGameTab
~~~~~~~~~~~~~~~

Represents an individual gametab.
*}
type
  _TRSGameTab = record
    id,              // the constant representing the tab
    parent: integer; // the constant of the tab that needs to be hovered to show this tab
    bounds: TBox;    // the bounds in a grid of the gametab navigation bar
    _bmp: integer;    // bitmap of the tab (used for switching between tabs)
    _bmpLoaded: boolean;
  end;

(*
type TRSGameTabs
~~~~~~~~~~~~~~~~

A single type for manipulating the entire gametab system.
*)
type
  TRSGameTabs = record(TRSInterface)
    tabs: array of _TRSGameTab;
    visibleTabArea,              // the current (set in TRSGameTabs.openTab)
    __visibleTabAreaSingle,      // when there's only a single tab open (excludes title bar)
    __visibleTabAreaMulti: TBox; // when there are multiple tabs open
    __tabSelectionArea: TBox;    // the area where different tabs are clicked to become visible
    navigationGrid: TBoxArray;
  end;

(*
var gameTabs
~~~~~~~~~~~~

An SRL global variable used to manipulate the gametabs in very general ways.

Example:

.. code-block:: pascal

    if (not gameTabs.isTabActive(TAB_BACKPACK)) then
      gameTabs.openTab(TAB_BACKPACK);
*)
var
  gameTabs: TRSGameTabs;

{*
TRSGameTabs.__init
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSGameTabs.__init();

Initiates the TRSGameTabs variable for use.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    gameTabs.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSGameTabs.__init();
begin
  with self do
  begin
    name := 'RS GameTabs (Navigation)';
    ID := ID_INTERFACE_GAMETABS;
    parentID := -1;
    static := false;
  end;

  addOnTerminate('__freeGameTabs');
end;
{$ENDIF}

{*
TRSGameTabs.__loadBitmap
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSGameTabs.__loadBitmap(tab: integer);

Loads the specified tab's bitmap into the global TRSGameTabs variable.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    gameTabs.__loadBitmap(TAB_BACKBACK);
*}
{$IFNDEF CODEINSIGHT}
procedure TRSGameTabs.__loadBitmap(tab: integer);
begin                               {done: stats, backpack}
  case tab of
    TAB_STATS:        self.tabs[tab]._bmp := bitmapFromString(6, 8, 'meJwT5v0gDEZ8vIlmSfzJG9iEYSIiYqqBrSxwEU7ugwJ6IgnL2eEiArw92ppCSWsRIqJSnsaJvEBu2CQGIJed8zi/oGJgGxNQxDSPCyjCyzWBX0c4uJsRyIWI8HAnaWsKQ7hABADwIifh');
    TAB_TASK,
    TAB_COMPASS_TASK: self.tabs[tab]._bmp := bitmapFromString(8, 8, 'meJzjmbiTB4z41t1hv/rV6uN7ILI++xEuyLfuNs+E7axpzbIJnUAEE7zDFxLHL6TCahfMyafGo2wJEee29ePmZOWU4eGMTOe2ywaq57VJBTLYpcRYpLiYJDnZ9IWAWtijrXm42HiVLYAagSJwxOkkysMnwK9sBjLWSRSIuMKVgEi7345XXplPSBUiDhFkK3QEigMAYQ4yxQ==');
    TAB_EQUIPMENT:    self.tabs[tab]._bmp := bitmapFromString(3, 12, 'meJzrbKrpbKpJTEnuhDG6+ycvXjIbIrJoYmdRRTWQDWQABYFsIMNSVw8oAmQrKagBGRA2BEG4QI1wE4CM+EhvIANoLADLWjI8');
    TAB_BACKPACK:     self.tabs[tab]._bmp := bitmapFromString(9, 9, 'meJxTss1RgiEeZUs5qyAgA0IqoUrJq1oAGfxiQUDEyM4HFIGoBHI5eayAbNPeLRBBoCwfFz9EC1DKOqk5f8/TpM7VBvaTgQioHigFVCBvZaVfOx2o3iJ3PUQjsnVAXUCVwjK5QEOAtsCdxMmnBpQC2gU0EOJgiBvgJrhWTknYcBgiBbERbi9QL5AEAAYAO0M=');
    TAB_DEFENSIVE:    self.tabs[tab]._bmp := bitmapFromString(9, 4, 'meJxLTEkuqqh2dbBkZc2zsXg8YeKtXafufv75G0gmpiR3908GSvGLBRnYT87IuwKXBUotXjIbSAKlgBqBskmdq+umrQYqAApCEEQKiIRlcoEKgIYDAA/lL/8=');
    TAB_RANGED:       self.tabs[tab]._bmp := bitmapFromString(2, 8, 'meJyzyFmrpaEpm9CpbBrEbZfNY+HGLxYkoGgAZCuaugFJUUlXYZlcISEDJdscfn4+ABAACfE=');
    TAB_MELEE:        self.tabs[tab]._bmp := bitmapFromString(4, 4, 'meJwTF+ScPnnKlz9/Fzz/PmfdFiBjz4mbSanJSbfeZfz4BWS42RtbrzzFNXW3S1SqmCAnANE4Gm4=');
    TAB_MAGIC:        self.tabs[tab]._bmp := bitmapFromString(4, 10, 'meJxb6CS4EIxqbXmvpIsCyYVIIsgkEDlqcEHYsSY8QNI6qVlTnAvITnHVM+3dIiyTa2A/OalztWxCJ79YEJCdkXdFziqIj4tfXtXCUlcPYghQPRABAE1GIYc=');
    TAB_PRAYER:       self.tabs[tab]._bmp := bitmapFromString(6, 6, 'meJx7dWHxqwuLP15d8fHayudnF947Ovv52UVfPr6EoM8fXjw+NR8oC+L++QtEQBGgyg+oIu+vLAcq+/T+OZAN0fjszIJbB6c/Ojnv47UVH64uf3p6ARABALyyXGE=');
    TAB_CLAN_CHAT:    self.tabs[tab]._bmp := bitmapFromString(7, 9, 'meJyzPvtRv3a6bEIn+9WvQMQzcSdz9STrladS3/+zTmrmiMrgW3cHKMJubmy5+SlQnJGdj9UuGCgCRKzmxkARoBogG6IMJJjWLFM1GcgFmgYXBCKgFUAuBEFsASKgSiAJ5MJFQCbAzIeYBkRAKyD2AhnICADvyUfz');
    TAB_FRIENDS_CHAT: self.tabs[tab]._bmp := bitmapFromString(10, 6, 'meJyzXnmKV9mCi1dALq/R6uN7y81Prc9+5BcLYmRgYI+2BkoJ8HIqyoio6hlbn3oLlNWvnc5sbsJW6MjaFsOnZCoiyKMsI6gZnAzUJVM1mSMqAyjOtLUeqMCkfbW4s5tmeIbV4SdAjXApIAlEQPVA64AkEAFlZRM6gdZBpIAIKAJxCQitPMWjbAmRBRoLRABydEFj');
    TAB_FRIENDS:      self.tabs[tab]._bmp := bitmapFromString(8, 8, 'meJyrm7a6btrqaftuAVF5x0QLjzTWthimrfVwwajKydUrjwK58lZWQCkgA8KFKJi69wazJCd7tHVS52oIgsg6ufiyeOqwFToC2UATQKi4Rs4qCGI4UNy1cgpEPVwQSALFtcIzlGxzrJOageJALlAQgoB2zVm7FaieR9kSaB1EMRABAFrsUf8=');
    TAB_MUSIC:        self.tabs[tab]._bmp := bitmapFromString(6, 8, 'meJyb/+Jb3bTVTi6+LlGpUZWTkzpXT9t3C8gWExOSV7UAknxc/NUrjwJFgCRQCiILVAkk57/4tu81CEUV1wBVAgWBIkAFQAOBsvJWVkA2UJeSghojAwNQDcQEiAhQPZABQfl7nkIYQO0ANDdHLQ==');
    TAB_NOTES:        self.tabs[tab]._bmp := BitmapFromString(8, 6, 'meJxziUr9/PM3BD25cwNI7nv9rXrlUUYGBicXXyAbIgJBQHZ5x0SglLyV1a5Td4Ei818gpOqmrYbomrbvFlwLRAHQQCXbnNRpp5DFIQioOGHDYbg5AP/SZ+c=');
  end;

  if (self.tabs[tab]._bmp <> -1) then
  begin
    print('TRSGameTabs.__loadBitmap(): Loaded tab '+toStr(tab)+' bitmap', TDebug.SUB);
    self.tabs[tab]._bmpLoaded := true
  end else
    print('TRSGameTabs.__loadBitmap(): Invalid tab '+toStr(tab), TDebug.WARNING);
end;
{$ENDIF}

{*
__freeGameTabs
~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure __freeGameTabs();

Frees all the gametab's bitmaps.  Called on script termination.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    addOnTerminate('__freeGameTabs');
*}
{$IFNDEF CODEINSIGHT}
procedure __freeGameTabs();
var
  i: integer;
begin
  for i := 0 to high(gameTabs.tabs) do
    if (gameTabs.tabs[i]._bmpLoaded) then
      freeBitmap(gameTabs.tabs[i]._bmp);
end;
{$ENDIF}

{*
TRSGameTabs._isTabValid
~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs._isTabValid(tab: integer): boolean;

Returns true if the 'tab' is valid.

.. note::

    - by Coh3n
    - Last Updated: 27 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (not gameTabs._isTabValid(TAB_BACKPACK)) then
      exit;
*}
function TRSGameTabs._isTabValid(tab: integer): boolean;
var
  i: integer;
begin
  for i := 0 to high(self.tabs) do
    if (self.tabs[i].id <> -1) then
      if (self.tabs[i].id = tab) then
        exit(true);

  if (not result) then
    print('TRSGameTabs._isTabValid(): Tab '+toStr(tab)+' is invalid', TDebug.WARNING);
end;

(*
TRSGameTabs.findX
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.findX(var p: TPoint): boolean;

Finds the X at the top of the game tab area.  Returns it's coordinates in 'p'.
Used to close gametabs.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs.findX(p)) then
      mouse(p.rand(3), MOUSE_LEFT);
*)
function TRSGameTabs.findX(var p: TPoint): boolean;
begin
  p := point(-1, -1);

  // gold color of the X
  result := findColorTolerance(p.x, p.y, 5621500,
              self.__visibleTabAreaSingle.x1,
              self.__visibleTabAreaSingle.y1 - 10,
              self.__visibleTabAreaSingle.x2,
              self.__visibleTabAreaSingle.y2, 5);
end;

(*
TRSGameTabs.areTabArrowsVisible
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.areTabArrowsVisible(): boolean;

Description of the function here.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    Example code here.
*)
function TRSGameTabs.areTabArrowsVisible(): boolean;
begin
  // the lighter gold color in the top half of the right arrow
  result := (getColor(self.__tabSelectionArea.x2 - 13, self.__tabSelectionArea.y1 + 9) = 4179955);
end;

(*
TRSGameTabs.areMultiOpen
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.areMultiOpen(): boolean;

Returns true if more than one tab is open.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs.areMultiOpen()) then
      writeln('Multiple tabs are open');
*)
function TRSGameTabs.areMultiOpen(): boolean;
var
  i: integer;
  atpa: array [0..1] of TPointArray;
  tpa: TPointArray;
begin
  if (self.areTabArrowsVisible()) then
    exit(true);

  for i := 0 to 1 do
    findColors(atpa[i], __COLORS_ACTIVE_TAB[i], self.__tabSelectionArea);

  tpa := mergeATPA(atpa);

  result := (length(tpa) > 10);
end;

(*
TRSGameTabs.areAnyOpen
~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.areAnyOpen(): boolean;

Returns true if any number of tabs are open.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs.areAnyOpen()) then
      writeln('Some undetermined number of tabs are open');
*)
function TRSGameTabs.areAnyOpen(): boolean;
var
  p: TPoint;
begin
  result := (self.findX(p) or self.areTabArrowsVisible() or self.areMultiOpen());

  if (not result) then
    print('TRSGameTabs.areAnyOpen(): No gametabs are open', TDebug.WARNING);
end;

{*
TRSGameTabs._findTab
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs._findTab(var p: TPoint; tab: integer; searchBox: TBox): boolean;

Returns true if the gametab 'tab' is found in the 'searchBox'.  Sets it's coordinates
to 'p'.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs._findTab(p, TAB_BACKPACK, gameTabs.__navigationTabArea)) then
    begin
      writeln('Opening the backpack tab');
      mouse(p.rand(5), MOUSE_LEFT);
    end;
*}
function TRSGameTabs._findTab(var p: TPoint; tab: integer; searchBox: TBox): boolean;
begin
  if (not self._isTabValid(tab)) then
    exit(false);

  // load tab bitmap if it hasn't already been loaded
  if (not self.tabs[tab]._bmpLoaded) then
    self.__loadBitmap(tab);

  result := findBitmapToleranceIn(self.tabs[tab]._bmp, p.x, p.y, searchBox, 15);
end;

{*
TRSGameTabs._getActiveTabBox
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs._getActiveTabBox(): TBox;

Returns a box around the active tab.

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    gameTabs._findTab(p, TAB_BACKPACK, gameTabs._getActiveTabBox());
*}
function TRSGameTabs._getActiveTabBox(): TBox;
var
  p: TPoint;
  tpa: TPointArray;
  bds: TBox;
  cols: array [0..1] of integer;
  atpa: array [0..1] of TPointArray;
  i: integer;
begin
  result := intToBox(-1, -1, -1, -1);

  if (not self.areAnyOpen()) then
    exit();

  if (self.areMultiOpen()) then
    self.visibleTabArea := self.__visibleTabAreaMulti
  else
    self.visibleTabArea := self.__visibleTabAreaSingle;

  for i := 0 to 1 do
    findColors(atpa[i], __COLORS_ACTIVE_TAB[i], self.__tabSelectionArea.x1,
                                                self.__tabSelectionArea.y1,
                                                self.__tabSelectionArea.x2,
                                                self.__tabSelectionArea.y2 - 1); // get rid of stray points on the last line

  tpa := mergeATPA(atpa);

  if (length(tpa) <= 0) then
    if (self.areMultiOpen()) then
    begin
      print('TRSGameTabs._getActiveTabBox(): Failed to find active tab color', TDebug.ERROR);
      exit;
    end else begin
      print('TRSGameTabs._getActiveTabBox(): There''s only a single tab open, failed to identify', TDebug.WARNING);
      exit;
    end;

  bds := tpa.getBounds();
  result := intToBox(bds.x1, bds.y1, bds.x2, bds.y2 + 25);
end;

(*
TRSGameTabs.getActiveTab
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.getActiveTab(): integer;

Returns the currently active tab.  If possible, use TRSGameTabs._isTabActive for
an increase in speed, or the tab's isOpen() function for better reliability (i.e.
tabBackpack.isOpen()).

.. warning::

    Does NOT currently work if there is only one tab open.  Instead, use the tab's
    own isOpen() function!


.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs.getActiveTab() = TAB_BACKPACK) then
      writeln('Backpack tab is open');
*)
function TRSGameTabs.getActiveTab(): integer;
var
  i: integer;
  p: TPoint;
  tpa: TPointArray;
  tabBox, bds: TBox;
begin
  result := -1;

  tabBox := self._getActiveTabBox();
  //smartImage.drawBox(tabBox, false, clRed);

  if (tabBox.x1 = -1) then
    exit;

  // loop through each tab, checking for the bitmap in the active tab slot
  for i := 0 to high(self.tabs) do
    if (self.tabs[i].id <> -1) then
      if (self._findTab(p, self.tabs[i].id, tabBox)) then
      begin
        result := i;
        break;
      end;
end;

(*
TRSGameTabs._isTabActive
~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs._isTabActive(tab: integer): boolean;

Returns true if the 'tab' is active. An internal function. If possible, use
the tab's interface isOpen() function (i.e. tabBackpack.isOpen()).

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs._isTabActive(TAB_BACKPACK)) then
      writeln('Backpack tab is open');
*)
function TRSGameTabs._isTabActive(tab: integer): boolean;
var
  p: TPoint;
  tabBox: TBox;
begin
  if (not self._isTabValid(tab)) then
    exit(false);

  tabBox := self._getActiveTabBox();
  //smartImage.drawBox(tabBox, false, clRed);

  if (tabBox.x1 = -1) then
    exit;

  result := self._findTab(p, tab, tabBox);
end;

{*
TRSGameTabs.openTab
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.openTab(tab: integer): boolean;

Returns true if the 'tab' is opened (or is already open). If possible, use the
tab's open() function (i.e. tabBackpack.open()).

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs.openTab(TAB_BACKPACK)) then
      writeln('Backpack tab is open');
*}
function TRSGameTabs.openTab(tab: integer): boolean;
var
  t: integer;
  p: TPoint;
  anyTabOpen: boolean;
begin
  if (not self._isTabValid(tab)) then
    exit(false);

  anyTabOpen := self.areAnyOpen();

  print('TRSGameTabs.openTab('+toStr(tab)+')', TDebug.HEADER);

  if (anyTabOpen) then
  begin
    // see if it's already active
    if (self._isTabActive(tab)) then
    begin
      print('Tab already active');
      result := true;
      print('TRSGameTabs.openTab('+toStr(tab)+'): '+toStr(result), TDebug.FOOTER);
      exit;
    end;

    // see if it's opened, just not the active tab, make it the active tab
    if (self._findTab(p, tab, self.__tabSelectionArea)) then
    begin
      print('Found tab already open, bringing to front');

      // still need more randomness on this IMO.
      mouse(p.rand(5, 5), MOUSE_LEFT);

      wait(50 + random(100));
      result := true;
      print('TRSGameTabs.openTab('+toStr(tab)+'): '+toStr(result), TDebug.FOOTER);
      exit;
    end;
  end;

  print('Opening tab via gametab navigation bar');

  // move mouse over the parent tab (nav bar) so sub tabs appear
  if (self.tabs[tab].parent <> -1) then
  begin
    mouseBox(self.tabs[self.tabs[tab].parent].bounds, MOUSE_MOVE, MOUSE_ACCURATE);
    wait(200 + random(300));
  end;

  mouseBox(self.tabs[tab].bounds, MOUSE_LEFT);

  t := (getSystemTime() + 3000);
  while ((getSystemTime() < t) and (not result)) do
  begin
    if (not anyTabOpen) then
      result := self.findX(p)
    else
      result := self._isTabActive(tab);

    wait(50 + random(50));
  end;

  if (result) then
    if (self.areMultiOpen()) then
      self.visibleTabArea := self.__visibleTabAreaMulti
    else
      self.visibleTabArea := self.__visibleTabAreaSingle;

  print('TRSGameTabs.openTab('+toStr(tab)+'): '+toStr(result), TDebug.FOOTER);
end;

{*
TRSGameTabs._closeTab
~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs._closeTab(tab: integer): boolean;

Returns true if the 'tab' is closed. The specified tab must be active before
it can be closed, so it is recommeded that you call gameTabs.openTab() first.
If possible, use the tab's open() function (i.e. tabBackpack.close()).

.. note::

    - by Coh3n
    - Last Updated: 26 July 2013 by Coh3n

Example:

.. code-block:: pascal

    if (gameTabs._closeTab(TAB_BACKPACK)) then
      writeln('Backpack tab is closed');
*}
function TRSGameTabs._closeTab(tab: integer): boolean;
var
  p: TPoint;
begin
  if (not self._isTabValid(tab)) then
    exit(false);

  if (not self._isTabActive(tab)) then
  begin
    print('TRSGameTabs._closeTab(): Tab '+toStr(tab)+' isn''t open', TDebug.WARNING);
    print('TRSGameTabs._closeTab(): Consider opening the game tab before trying to close it', TDebug.HINT);
    exit(false);
  end;

  if (self.findX(p)) then
  begin
    mouse(p.rand(2), MOUSE_LEFT);
    result := true;
  end;
end;

{*
TRSGameTabs.__find
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSGameTabs.__find(): boolean;

Finds the gametabs area based on the client's size.

.. note::

    - by Coh3n
    - Last Updated: 10 August 2013 by Coh3n

Example:

.. code-block:: pascal

    gameTabs.__find();
*}
{$IFNDEF CODEINSIGHT}
function TRSGameTabs.__find(): boolean;
var
  i, wid, hei: integer;
begin
  print('TRSGameTabs.__find()', TDebug.HEADER);

  getClientDimensions(wid, hei);
  result := true;

  with self do
  begin
    setBounds([wid - 352, hei - 48, wid - 1, hei - 1]);

    __visibleTabAreaSingle := intToBox(wid - 225, hei - 404, wid - 1, hei - 48);
    __visibleTabAreaMulti  := intToBox(__visibleTabAreaSingle.x1,
                                       __visibleTabAreaSingle.y1 + 24,
                                       __visibleTabAreaSingle.x2,
                                       __visibleTabAreaSingle.y2);

    if (areMultiOpen()) then
      visibleTabArea := __visibleTabAreaMulti
    else
      visibleTabArea := __visibleTabAreaSingle;

    __tabSelectionArea := intToBox(__visibleTabAreaSingle.x1,
                                   __visibleTabAreaSingle.y1,
                                   __visibleTabAreaSingle.x2,
                                   __visibleTabAreaMulti.y1);

    // tabs are indexed from left to right, then bottom to top (see constants)
    navigationGrid := grid(8, 6, 31, 31, 42, 36, point(wid - 324, hei - 205));

    setLength(tabs, length(navigationGrid));

    for i := 0 to high(tabs) do
    begin
      tabs[i].id := i;
      tabs[i].parent := -1;
      tabs[i].bounds := navigationGrid[i];
      tabs[i]._bmp := -1;

      case tabs[i].id of
        TAB_TASK,
        TAB_STATS:
          tabs[i].parent := TAB_HERO;

        TAB_EQUIPMENT,
        TAB_BACKPACK:
          tabs[i].parent := TAB_GEAR;

        TAB_COMPASS_TASK:
          tabs[i].parent := TAB_ADVENTURES;

        TAB_DEFENSIVE,
        TAB_RANGED,
        TAB_MELEE,
        TAB_MAGIC,
        TAB_PRAYER:
          tabs[i].parent := TAB_POWERS;

        TAB_CLAN_CHAT,
        TAB_FRIENDS_CHAT,
        TAB_FRIENDS:
          tabs[i].parent := TAB_SOCIAL;

        TAB_MUSIC,
        TAB_NOTES:
          tabs[i].parent := TAB_OTHER;

        else
          tabs[i].id := -1;
      end;
    end;
  end;

  print('Set gametabs bounds based on the client''s size');
  print('Make sure the gametabs navigation bar, and open tabs are in the bottom right corner of the screen', TDebug.WARNING);
  print('TRSGameTabs.__find(): '+toStr(result), TDebug.FOOTER);
end;
{$ENDIF}

(*
TRSGameTabs.clearMouseOverText
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

    procedure TRSGameTabs.clearMouseOverText();

Will clear the mouseover text from the gametab visable area, if the mouseover
text bounds are overlaping.

.. note::

    - by Olly
    - Last Updated: 17 August 2013 by Olly

Example:

.. code-block:: pascal

    gameTabs.clearMouseOverText();
*)
procedure TRSGameTabs.clearMouseOverText();
var
  b: TBox;
  clientW, clientH: integer;
  textBounds: TBox;
  mousePnt, p: TPoint;
begin
  // if it's not open, or not overlaping the tab area we're done here
  if (not isMouseOverMenuOpen(textBounds)) then
    exit();

  if (not textBounds.overlap(self.visibleTabArea)) then
    exit();

  print('gameTabs.clearMouseOverText(): Mouseover text overlaps gametab area, moving the mouse', TDebug.SUB);

  getClientDimensions(clientW, clientH);
  getMousePos(mousePnt.x, mousePnt.y);

  textBounds.setLimit(self.visibleTabArea);

  // TBox is the area where we could move the mouse to hopefully close the text
  b := [0, 0, mousePnt.x - textBounds.getWidth() + random(5), clientH - 1];

  p := b.getGaussPoint();

  // offset the point closer to the gametab, and closer to the mainscreen
  if (8 > random(10)) then
  begin
    p.x := p.x + GaussRangeInt(0, b.x2 - p.x);
    p.y := p.y - random(35);
  end;

  mouse(p);

  print('gameTabs.clearMouseOverText(): Mouse moved to ' + toStr(p), TDebug.SUB);
end;

function __findGameTabs(): boolean;
begin
  result := gametabs.__find();
end;

{$f+} // needed so __findGametabs isn't called when assigned

begin
  gameTabs.__init();
  __interfaceFindFunctions[gameTabs.ID] := @__findGameTabs;
end;
